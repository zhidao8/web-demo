[{"title":"《真正的中国天气api接口xml，json》详解","date":"2017-03-09T12:55:56.000Z","path":"2017/03/09/《真正的中国天气api接口xml，json》详解/","text":"前言某天想写个天气软件，于是上网找找有没有免费的天气 API 。发现许多的API不是收费，就是不能用了（心塞塞）。最后找到这篇文章真正的中国天气api接口xml，json（求加精） … 心里那个高兴啊，终于找到一个能用的天气 API 了。用浏览器试了一下，确实不错，作者晒出的API都是能用的。于是便写代码捣鼓解析 API 返回的 xml 问题代码如下123456789101112131415161718192021222324252627282930public class WeatherApiDataGetter &#123; public static void main(String[] args) &#123; // xmlContent 用来存储 API 返回的 xml 中的所有内容 StringBuilder xmlContent = new StringBuilder(); try &#123; // 将 API 地址包装成 URL // 101010100 是北京的城市代码 URL weatherUrl = new URL(\"http://wthrcdn.etouch.cn/WeatherApi?citykey=101010100\"); // 获取 URL 连接 URLConnection urlConnection = weatherUrl.openConnection(); // 获取 URL 连接的输入流对象，以 UTF-8 的编码格式打开流， // 并包装成 BufferedReader 对象以提高读取速率 BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(urlConnection.getInputStream(), \"UTF-8\") ); // 读取流中的所有内容 String line; while ((line = bufferedReader.readLine()) != null) &#123; xmlContent.append(line); &#125; &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; // 输出 xml 中的所有内容 System.out.println(xmlContent); &#125;&#125; 结果没错，乱码 好吧，我们换一种编码试试，换成 GBK 编码12345// 获取 URL 连接的输入流对象，以 GBK 的编码格式打开流，// 并包装成 BufferedReader 对象以提高读取速率BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(urlConnection.getInputStream(), \"GBK\")); 结果还是不行诶 好吧，我们再试一种编码吧，这次是 Unicode 编码12345// 获取 URL 连接的输入流对象，以 Unicode 的编码格式打开流，// 并包装成 BufferedReader 对象以提高读取速率BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(urlConnection.getInputStream(), \"Unicode\")); 结果纠结……为什么浏览器可以，我直接读取又不可以？一定是我的大家方式不对 探索既然浏览器可以查看 API 返回的 xml ，那肯定用了什么特殊的方法 我们来尝试着研究一下 首先，从浏览器打开 API 网址 http://wthrcdn.etouch.cn/WeatherApi?citykey=101010100 其次，我们打开浏览器后按 F12 打开浏览器的开发者工具（我这里用的是360极速浏览器，可能其他的浏览器快捷键不一样）。再次，点击 Netword 选项。这个选项可以记录浏览器在打开网页时的所有的行为。然后，我们刷新一下网址，这样就能把浏览器的行为记录下来了 结果 很好，浏览器做的事很简单，先选择第一个。看名字就知道，这个是我们刚刚打开的网址。选择右边的 Headers ，我们一行一行地研究，于是发现这行 Content-Encoding:gzip 原来 API 返回的是 gzip 格式的文件，这样就终于知道自己获取的流为什么乱码了。 了解更多关于浏览器 F12 的 Netword 选项 模拟浏览器登陆 - 百度搜索 关于 gzip 格式的简单介绍 gzip 小结 解决我们重新改改代码，把流对象用 GZIPInputStream 包装一下1234567// 获取 URL 连接的输入流对象，然后包装成 GZIPInputStream 对象，// 再包装成 BufferedReader 对象以提高读取速率BufferedReader bufferedReader = new BufferedReader( new InputStreamReader( new GZIPInputStream(urlConnection.getInputStream())/*, \"UTF-8\"*/ // 实测可以不指定编码方式 )); 结果嗯，这下总算是正确了 后记剩下的就是解析了 xml 了。另外，城市代码可以参考如下网址 城市ID列表 实测部分城市不可用。具体可以自己去折腾折腾，当然也可以下载下面的示例 下载包含以下内容的示例 通过城市代码获取 xml 文本 解析 xml 内容 所有可用城市列表","tags":[]},{"title":"Hello World","date":"2017-03-08T02:51:08.550Z","path":"2017/03/08/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]